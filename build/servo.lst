ARM GAS  /tmp/cctdjf0T.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"servo.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata
  16              		.align	2
  17              	.LC0:
  18 0000 63616E6E 		.ascii	"cannot find servo\015\000"
  18      6F742066 
  18      696E6420 
  18      73657276 
  18      6F0D00
  19              		.section	.text.servo_attach,"ax",%progbits
  20              		.align	1
  21              		.global	servo_attach
  22              		.arch armv7-m
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  26              		.fpu softvfp
  28              	servo_attach:
  29              	.LFB66:
  30              		.file 1 "hardware/src/servo.c"
   1:hardware/src/servo.c **** #include "servo.h"
   2:hardware/src/servo.c **** #include "stm32f10x.h"
   3:hardware/src/servo.c **** #include "stdio.h"
   4:hardware/src/servo.c **** 
   5:hardware/src/servo.c **** void servo_attach(char servo_n)
   6:hardware/src/servo.c **** {
  31              		.loc 1 6 1
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 8
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 80B5     		push	{r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 82B0     		sub	sp, sp, #8
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 7
  46 0006 0346     		mov	r3, r0
  47 0008 FB71     		strb	r3, [r7, #7]
   7:hardware/src/servo.c ****     switch(servo_n){
ARM GAS  /tmp/cctdjf0T.s 			page 2


  48              		.loc 1 7 5
  49 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  50 000c 002B     		cmp	r3, #0
  51 000e 02D0     		beq	.L2
  52 0010 012B     		cmp	r3, #1
  53 0012 06D0     		beq	.L3
  54 0014 0BE0     		b	.L6
  55              	.L2:
  56              	.LBB2:
   8:hardware/src/servo.c ****         case 0:
   9:hardware/src/servo.c ****         // PA1 PWM
  10:hardware/src/servo.c ****             TIM2_CH2_init(200,7199);
  57              		.loc 1 10 13
  58 0016 41F61F41 		movw	r1, #7199
  59 001a C820     		movs	r0, #200
  60 001c FFF7FEFF 		bl	TIM2_CH2_init
  11:hardware/src/servo.c ****             break;
  61              		.loc 1 11 13
  62 0020 09E0     		b	.L5
  63              	.L3:
  12:hardware/src/servo.c ****         case 1:
  13:hardware/src/servo.c ****         // PA2 PWM  also uart2
  14:hardware/src/servo.c ****             TIM2_CH3_init(200,7199);
  64              		.loc 1 14 13
  65 0022 41F61F41 		movw	r1, #7199
  66 0026 C820     		movs	r0, #200
  67 0028 FFF7FEFF 		bl	TIM2_CH3_init
  15:hardware/src/servo.c ****             break;
  68              		.loc 1 15 13
  69 002c 03E0     		b	.L5
  70              	.L6:
  16:hardware/src/servo.c ****         default:
  17:hardware/src/servo.c ****             printf("cannot find servo\r\n");
  71              		.loc 1 17 13
  72 002e 0448     		ldr	r0, .L7
  73 0030 FFF7FEFF 		bl	puts
  18:hardware/src/servo.c ****             break;
  74              		.loc 1 18 13
  75 0034 00BF     		nop
  76              	.L5:
  77              	.LBE2:
  19:hardware/src/servo.c ****     }
  20:hardware/src/servo.c **** }
  78              		.loc 1 20 1
  79 0036 00BF     		nop
  80 0038 0837     		adds	r7, r7, #8
  81              	.LCFI3:
  82              		.cfi_def_cfa_offset 8
  83 003a BD46     		mov	sp, r7
  84              	.LCFI4:
  85              		.cfi_def_cfa_register 13
  86              		@ sp needed
  87 003c 80BD     		pop	{r7, pc}
  88              	.L8:
  89 003e 00BF     		.align	2
  90              	.L7:
  91 0040 00000000 		.word	.LC0
ARM GAS  /tmp/cctdjf0T.s 			page 3


  92              		.cfi_endproc
  93              	.LFE66:
  95              		.global	__aeabi_i2d
  96              		.global	__aeabi_ddiv
  97              		.global	__aeabi_dmul
  98              		.global	__aeabi_d2iz
  99              		.section	.rodata
 100 0013 00       		.align	2
 101              	.LC1:
 102 0014 6572726F 		.ascii	"error angle input in %s\015\012\000"
 102      7220616E 
 102      676C6520 
 102      696E7075 
 102      7420696E 
 103              		.section	.text.servo_0_write,"ax",%progbits
 104              		.align	1
 105              		.global	servo_0_write
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 109              		.fpu softvfp
 111              	servo_0_write:
 112              	.LFB67:
  21:hardware/src/servo.c **** 
  22:hardware/src/servo.c **** void servo_0_write(int angle)
  23:hardware/src/servo.c **** {
 113              		.loc 1 23 1
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 8
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117 0000 80B5     		push	{r7, lr}
 118              	.LCFI5:
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 7, -8
 121              		.cfi_offset 14, -4
 122 0002 82B0     		sub	sp, sp, #8
 123              	.LCFI6:
 124              		.cfi_def_cfa_offset 16
 125 0004 00AF     		add	r7, sp, #0
 126              	.LCFI7:
 127              		.cfi_def_cfa_register 7
 128 0006 7860     		str	r0, [r7, #4]
  24:hardware/src/servo.c ****     if(angle>=0 && angle<=180){
 129              		.loc 1 24 7
 130 0008 7B68     		ldr	r3, [r7, #4]
 131 000a 002B     		cmp	r3, #0
 132 000c 24DB     		blt	.L10
 133              		.loc 1 24 17 discriminator 1
 134 000e 7B68     		ldr	r3, [r7, #4]
 135 0010 B42B     		cmp	r3, #180
 136 0012 21DC     		bgt	.L10
  25:hardware/src/servo.c ****         angle = (int)(angle/180.0*20)+5;
 137              		.loc 1 25 28
 138 0014 7868     		ldr	r0, [r7, #4]
 139 0016 FFF7FEFF 		bl	__aeabi_i2d
 140 001a 4FF00002 		mov	r2, #0
 141 001e 134B     		ldr	r3, .L12
ARM GAS  /tmp/cctdjf0T.s 			page 4


 142 0020 FFF7FEFF 		bl	__aeabi_ddiv
 143 0024 0246     		mov	r2, r0
 144 0026 0B46     		mov	r3, r1
 145 0028 1046     		mov	r0, r2
 146 002a 1946     		mov	r1, r3
 147              		.loc 1 25 34
 148 002c 4FF00002 		mov	r2, #0
 149 0030 0F4B     		ldr	r3, .L12+4
 150 0032 FFF7FEFF 		bl	__aeabi_dmul
 151 0036 0246     		mov	r2, r0
 152 0038 0B46     		mov	r3, r1
 153              		.loc 1 25 17
 154 003a 1046     		mov	r0, r2
 155 003c 1946     		mov	r1, r3
 156 003e FFF7FEFF 		bl	__aeabi_d2iz
 157 0042 0346     		mov	r3, r0
 158              		.loc 1 25 15
 159 0044 0533     		adds	r3, r3, #5
 160 0046 7B60     		str	r3, [r7, #4]
  26:hardware/src/servo.c ****         TIM_SetCompare2(TIM2,angle);
 161              		.loc 1 26 9
 162 0048 7B68     		ldr	r3, [r7, #4]
 163 004a 9BB2     		uxth	r3, r3
 164 004c 1946     		mov	r1, r3
 165 004e 4FF08040 		mov	r0, #1073741824
 166 0052 FFF7FEFF 		bl	TIM_SetCompare2
 167 0056 04E0     		b	.L11
 168              	.L10:
  27:hardware/src/servo.c ****     }
  28:hardware/src/servo.c ****     else{
  29:hardware/src/servo.c ****         printf("error angle input in %s\r\n",__func__);
 169              		.loc 1 29 9
 170 0058 0649     		ldr	r1, .L12+8
 171 005a 0748     		ldr	r0, .L12+12
 172 005c FFF7FEFF 		bl	printf
  30:hardware/src/servo.c ****     }
  31:hardware/src/servo.c **** }
 173              		.loc 1 31 1
 174 0060 00BF     		nop
 175              	.L11:
 176 0062 00BF     		nop
 177 0064 0837     		adds	r7, r7, #8
 178              	.LCFI8:
 179              		.cfi_def_cfa_offset 8
 180 0066 BD46     		mov	sp, r7
 181              	.LCFI9:
 182              		.cfi_def_cfa_register 13
 183              		@ sp needed
 184 0068 80BD     		pop	{r7, pc}
 185              	.L13:
 186 006a 00BF     		.align	2
 187              	.L12:
 188 006c 00806640 		.word	1080459264
 189 0070 00003440 		.word	1077149696
 190 0074 00000000 		.word	__func__.1
 191 0078 14000000 		.word	.LC1
 192              		.cfi_endproc
ARM GAS  /tmp/cctdjf0T.s 			page 5


 193              	.LFE67:
 195              		.section	.text.servo_1_write,"ax",%progbits
 196              		.align	1
 197              		.global	servo_1_write
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu softvfp
 203              	servo_1_write:
 204              	.LFB68:
  32:hardware/src/servo.c **** 
  33:hardware/src/servo.c **** void servo_1_write(int angle)
  34:hardware/src/servo.c **** {
 205              		.loc 1 34 1
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              	.LCFI10:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 7, -8
 213              		.cfi_offset 14, -4
 214 0002 82B0     		sub	sp, sp, #8
 215              	.LCFI11:
 216              		.cfi_def_cfa_offset 16
 217 0004 00AF     		add	r7, sp, #0
 218              	.LCFI12:
 219              		.cfi_def_cfa_register 7
 220 0006 7860     		str	r0, [r7, #4]
  35:hardware/src/servo.c ****     if(angle>=0 && angle<=180){
 221              		.loc 1 35 7
 222 0008 7B68     		ldr	r3, [r7, #4]
 223 000a 002B     		cmp	r3, #0
 224 000c 24DB     		blt	.L15
 225              		.loc 1 35 17 discriminator 1
 226 000e 7B68     		ldr	r3, [r7, #4]
 227 0010 B42B     		cmp	r3, #180
 228 0012 21DC     		bgt	.L15
  36:hardware/src/servo.c ****         angle = (int)(angle/180.0*20)+5;
 229              		.loc 1 36 28
 230 0014 7868     		ldr	r0, [r7, #4]
 231 0016 FFF7FEFF 		bl	__aeabi_i2d
 232 001a 4FF00002 		mov	r2, #0
 233 001e 134B     		ldr	r3, .L17
 234 0020 FFF7FEFF 		bl	__aeabi_ddiv
 235 0024 0246     		mov	r2, r0
 236 0026 0B46     		mov	r3, r1
 237 0028 1046     		mov	r0, r2
 238 002a 1946     		mov	r1, r3
 239              		.loc 1 36 34
 240 002c 4FF00002 		mov	r2, #0
 241 0030 0F4B     		ldr	r3, .L17+4
 242 0032 FFF7FEFF 		bl	__aeabi_dmul
 243 0036 0246     		mov	r2, r0
 244 0038 0B46     		mov	r3, r1
 245              		.loc 1 36 17
 246 003a 1046     		mov	r0, r2
ARM GAS  /tmp/cctdjf0T.s 			page 6


 247 003c 1946     		mov	r1, r3
 248 003e FFF7FEFF 		bl	__aeabi_d2iz
 249 0042 0346     		mov	r3, r0
 250              		.loc 1 36 15
 251 0044 0533     		adds	r3, r3, #5
 252 0046 7B60     		str	r3, [r7, #4]
  37:hardware/src/servo.c ****         TIM_SetCompare3(TIM2,angle);
 253              		.loc 1 37 9
 254 0048 7B68     		ldr	r3, [r7, #4]
 255 004a 9BB2     		uxth	r3, r3
 256 004c 1946     		mov	r1, r3
 257 004e 4FF08040 		mov	r0, #1073741824
 258 0052 FFF7FEFF 		bl	TIM_SetCompare3
 259 0056 04E0     		b	.L16
 260              	.L15:
  38:hardware/src/servo.c ****     }
  39:hardware/src/servo.c ****     else{
  40:hardware/src/servo.c ****         printf("error angle input in %s\r\n",__func__);
 261              		.loc 1 40 9
 262 0058 0649     		ldr	r1, .L17+8
 263 005a 0748     		ldr	r0, .L17+12
 264 005c FFF7FEFF 		bl	printf
  41:hardware/src/servo.c ****     }
  42:hardware/src/servo.c **** }
 265              		.loc 1 42 1
 266 0060 00BF     		nop
 267              	.L16:
 268 0062 00BF     		nop
 269 0064 0837     		adds	r7, r7, #8
 270              	.LCFI13:
 271              		.cfi_def_cfa_offset 8
 272 0066 BD46     		mov	sp, r7
 273              	.LCFI14:
 274              		.cfi_def_cfa_register 13
 275              		@ sp needed
 276 0068 80BD     		pop	{r7, pc}
 277              	.L18:
 278 006a 00BF     		.align	2
 279              	.L17:
 280 006c 00806640 		.word	1080459264
 281 0070 00003440 		.word	1077149696
 282 0074 00000000 		.word	__func__.0
 283 0078 14000000 		.word	.LC1
 284              		.cfi_endproc
 285              	.LFE68:
 287              		.section	.text.servo0_set_duty_cycle,"ax",%progbits
 288              		.align	1
 289              		.global	servo0_set_duty_cycle
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu softvfp
 295              	servo0_set_duty_cycle:
 296              	.LFB69:
  43:hardware/src/servo.c **** 
  44:hardware/src/servo.c **** void servo0_set_duty_cycle(char duty_cycle)
  45:hardware/src/servo.c **** {
ARM GAS  /tmp/cctdjf0T.s 			page 7


 297              		.loc 1 45 1
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 8
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301 0000 80B5     		push	{r7, lr}
 302              	.LCFI15:
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 7, -8
 305              		.cfi_offset 14, -4
 306 0002 82B0     		sub	sp, sp, #8
 307              	.LCFI16:
 308              		.cfi_def_cfa_offset 16
 309 0004 00AF     		add	r7, sp, #0
 310              	.LCFI17:
 311              		.cfi_def_cfa_register 7
 312 0006 0346     		mov	r3, r0
 313 0008 FB71     		strb	r3, [r7, #7]
  46:hardware/src/servo.c ****     TIM_SetCompare2(TIM2,duty_cycle*2);
 314              		.loc 1 46 5
 315 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 316 000c 9BB2     		uxth	r3, r3
 317 000e 5B00     		lsls	r3, r3, #1
 318 0010 9BB2     		uxth	r3, r3
 319 0012 1946     		mov	r1, r3
 320 0014 4FF08040 		mov	r0, #1073741824
 321 0018 FFF7FEFF 		bl	TIM_SetCompare2
  47:hardware/src/servo.c **** }
 322              		.loc 1 47 1
 323 001c 00BF     		nop
 324 001e 0837     		adds	r7, r7, #8
 325              	.LCFI18:
 326              		.cfi_def_cfa_offset 8
 327 0020 BD46     		mov	sp, r7
 328              	.LCFI19:
 329              		.cfi_def_cfa_register 13
 330              		@ sp needed
 331 0022 80BD     		pop	{r7, pc}
 332              		.cfi_endproc
 333              	.LFE69:
 335              		.section	.rodata.__func__.1,"a"
 336              		.align	2
 339              	__func__.1:
 340 0000 73657276 		.ascii	"servo_0_write\000"
 340      6F5F305F 
 340      77726974 
 340      6500
 341              		.section	.rodata.__func__.0,"a"
 342              		.align	2
 345              	__func__.0:
 346 0000 73657276 		.ascii	"servo_1_write\000"
 346      6F5F315F 
 346      77726974 
 346      6500
 347              		.text
 348              	.Letext0:
 349              		.file 2 "/home/pico/tools/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_defaul
 350              		.file 3 "/home/pico/tools/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /tmp/cctdjf0T.s 			page 8


 351              		.file 4 "Inc/stm32f10x.h"
ARM GAS  /tmp/cctdjf0T.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 servo.c
     /tmp/cctdjf0T.s:16     .rodata:0000000000000000 $d
     /tmp/cctdjf0T.s:20     .text.servo_attach:0000000000000000 $t
     /tmp/cctdjf0T.s:28     .text.servo_attach:0000000000000000 servo_attach
     /tmp/cctdjf0T.s:91     .text.servo_attach:0000000000000040 $d
     /tmp/cctdjf0T.s:104    .text.servo_0_write:0000000000000000 $t
     /tmp/cctdjf0T.s:111    .text.servo_0_write:0000000000000000 servo_0_write
     /tmp/cctdjf0T.s:188    .text.servo_0_write:000000000000006c $d
     /tmp/cctdjf0T.s:339    .rodata.__func__.1:0000000000000000 __func__.1
     /tmp/cctdjf0T.s:196    .text.servo_1_write:0000000000000000 $t
     /tmp/cctdjf0T.s:203    .text.servo_1_write:0000000000000000 servo_1_write
     /tmp/cctdjf0T.s:280    .text.servo_1_write:000000000000006c $d
     /tmp/cctdjf0T.s:345    .rodata.__func__.0:0000000000000000 __func__.0
     /tmp/cctdjf0T.s:288    .text.servo0_set_duty_cycle:0000000000000000 $t
     /tmp/cctdjf0T.s:295    .text.servo0_set_duty_cycle:0000000000000000 servo0_set_duty_cycle
     /tmp/cctdjf0T.s:336    .rodata.__func__.1:0000000000000000 $d
     /tmp/cctdjf0T.s:342    .rodata.__func__.0:0000000000000000 $d

UNDEFINED SYMBOLS
TIM2_CH2_init
TIM2_CH3_init
puts
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_d2iz
TIM_SetCompare2
printf
TIM_SetCompare3
