ARM GAS  /tmp/cchv0dEJ.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f10x_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB63:
  26              		.file 1 "Src/stm32f10x_it.c"
   1:Src/stm32f10x_it.c **** /**
   2:Src/stm32f10x_it.c ****   ******************************************************************************
   3:Src/stm32f10x_it.c ****   * @file    Project/STM32F10x_StdPeriph_Template/stm32f10x_it.c 
   4:Src/stm32f10x_it.c ****   * @author  MCD Application Team
   5:Src/stm32f10x_it.c ****   * @version V3.5.0
   6:Src/stm32f10x_it.c ****   * @date    08-April-2011
   7:Src/stm32f10x_it.c ****   * @brief   Main Interrupt Service Routines.
   8:Src/stm32f10x_it.c ****   *          This file provides template for all exceptions handler and 
   9:Src/stm32f10x_it.c ****   *          peripherals interrupt service routine.
  10:Src/stm32f10x_it.c ****   ******************************************************************************
  11:Src/stm32f10x_it.c ****   * @attention
  12:Src/stm32f10x_it.c ****   *
  13:Src/stm32f10x_it.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  14:Src/stm32f10x_it.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  15:Src/stm32f10x_it.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  16:Src/stm32f10x_it.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  17:Src/stm32f10x_it.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  18:Src/stm32f10x_it.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  19:Src/stm32f10x_it.c ****   *
  20:Src/stm32f10x_it.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  21:Src/stm32f10x_it.c ****   ******************************************************************************
  22:Src/stm32f10x_it.c ****   */
  23:Src/stm32f10x_it.c **** 
  24:Src/stm32f10x_it.c **** /* Includes ------------------------------------------------------------------*/ 
  25:Src/stm32f10x_it.c **** #include "stm32f10x_it.h" 
  26:Src/stm32f10x_it.c **** /** @addtogroup STM32F10x_StdPeriph_Template
  27:Src/stm32f10x_it.c ****   * @{
  28:Src/stm32f10x_it.c ****   */
  29:Src/stm32f10x_it.c **** 
  30:Src/stm32f10x_it.c **** /* Private typedef -----------------------------------------------------------*/
  31:Src/stm32f10x_it.c **** /* Private define ------------------------------------------------------------*/
  32:Src/stm32f10x_it.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  /tmp/cchv0dEJ.s 			page 2


  33:Src/stm32f10x_it.c **** /* Private variables ---------------------------------------------------------*/
  34:Src/stm32f10x_it.c **** /* Private function prototypes -----------------------------------------------*/
  35:Src/stm32f10x_it.c **** /* Private functions ---------------------------------------------------------*/
  36:Src/stm32f10x_it.c **** 
  37:Src/stm32f10x_it.c **** /******************************************************************************/
  38:Src/stm32f10x_it.c **** /*            Cortex-M3 Processor Exceptions Handlers                         */
  39:Src/stm32f10x_it.c **** /******************************************************************************/
  40:Src/stm32f10x_it.c **** 
  41:Src/stm32f10x_it.c **** /**
  42:Src/stm32f10x_it.c ****   * @brief  This function handles NMI exception.
  43:Src/stm32f10x_it.c ****   * @param  None
  44:Src/stm32f10x_it.c ****   * @retval None
  45:Src/stm32f10x_it.c ****   */
  46:Src/stm32f10x_it.c **** void NMI_Handler(void)
  47:Src/stm32f10x_it.c **** {
  27              		.loc 1 47 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
  48:Src/stm32f10x_it.c **** }
  39              		.loc 1 48 1
  40 0004 00BF     		nop
  41 0006 BD46     		mov	sp, r7
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 13
  44              		@ sp needed
  45 0008 80BC     		pop	{r7}
  46              	.LCFI3:
  47              		.cfi_restore 7
  48              		.cfi_def_cfa_offset 0
  49 000a 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE63:
  53              		.section	.text.HardFault_Handler,"ax",%progbits
  54              		.align	1
  55              		.global	HardFault_Handler
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu softvfp
  61              	HardFault_Handler:
  62              	.LFB64:
  49:Src/stm32f10x_it.c **** 
  50:Src/stm32f10x_it.c **** /**
  51:Src/stm32f10x_it.c ****   * @brief  This function handles Hard Fault exception.
  52:Src/stm32f10x_it.c ****   * @param  None
  53:Src/stm32f10x_it.c ****   * @retval None
  54:Src/stm32f10x_it.c ****   */
  55:Src/stm32f10x_it.c **** void HardFault_Handler(void)
ARM GAS  /tmp/cchv0dEJ.s 			page 3


  56:Src/stm32f10x_it.c **** {
  63              		.loc 1 56 1
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 1, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68 0000 80B4     		push	{r7}
  69              	.LCFI4:
  70              		.cfi_def_cfa_offset 4
  71              		.cfi_offset 7, -4
  72 0002 00AF     		add	r7, sp, #0
  73              	.LCFI5:
  74              		.cfi_def_cfa_register 7
  75              	.L3:
  57:Src/stm32f10x_it.c ****   /* Go to infinite loop when Hard Fault exception occurs */
  58:Src/stm32f10x_it.c ****   while (1)
  76              		.loc 1 58 9 discriminator 1
  77 0004 FEE7     		b	.L3
  78              		.cfi_endproc
  79              	.LFE64:
  81              		.section	.text.MemManage_Handler,"ax",%progbits
  82              		.align	1
  83              		.global	MemManage_Handler
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu softvfp
  89              	MemManage_Handler:
  90              	.LFB65:
  59:Src/stm32f10x_it.c ****   {
  60:Src/stm32f10x_it.c ****   }
  61:Src/stm32f10x_it.c **** }
  62:Src/stm32f10x_it.c **** 
  63:Src/stm32f10x_it.c **** /**
  64:Src/stm32f10x_it.c ****   * @brief  This function handles Memory Manage exception.
  65:Src/stm32f10x_it.c ****   * @param  None
  66:Src/stm32f10x_it.c ****   * @retval None
  67:Src/stm32f10x_it.c ****   */
  68:Src/stm32f10x_it.c **** void MemManage_Handler(void)
  69:Src/stm32f10x_it.c **** {
  91              		.loc 1 69 1
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 1, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96 0000 80B4     		push	{r7}
  97              	.LCFI6:
  98              		.cfi_def_cfa_offset 4
  99              		.cfi_offset 7, -4
 100 0002 00AF     		add	r7, sp, #0
 101              	.LCFI7:
 102              		.cfi_def_cfa_register 7
 103              	.L5:
  70:Src/stm32f10x_it.c ****   /* Go to infinite loop when Memory Manage exception occurs */
  71:Src/stm32f10x_it.c ****   while (1)
 104              		.loc 1 71 9 discriminator 1
 105 0004 FEE7     		b	.L5
ARM GAS  /tmp/cchv0dEJ.s 			page 4


 106              		.cfi_endproc
 107              	.LFE65:
 109              		.section	.text.BusFault_Handler,"ax",%progbits
 110              		.align	1
 111              		.global	BusFault_Handler
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu softvfp
 117              	BusFault_Handler:
 118              	.LFB66:
  72:Src/stm32f10x_it.c ****   {
  73:Src/stm32f10x_it.c ****   }
  74:Src/stm32f10x_it.c **** }
  75:Src/stm32f10x_it.c **** 
  76:Src/stm32f10x_it.c **** /**
  77:Src/stm32f10x_it.c ****   * @brief  This function handles Bus Fault exception.
  78:Src/stm32f10x_it.c ****   * @param  None
  79:Src/stm32f10x_it.c ****   * @retval None
  80:Src/stm32f10x_it.c ****   */
  81:Src/stm32f10x_it.c **** void BusFault_Handler(void)
  82:Src/stm32f10x_it.c **** {
 119              		.loc 1 82 1
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 1, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124 0000 80B4     		push	{r7}
 125              	.LCFI8:
 126              		.cfi_def_cfa_offset 4
 127              		.cfi_offset 7, -4
 128 0002 00AF     		add	r7, sp, #0
 129              	.LCFI9:
 130              		.cfi_def_cfa_register 7
 131              	.L7:
  83:Src/stm32f10x_it.c ****   /* Go to infinite loop when Bus Fault exception occurs */
  84:Src/stm32f10x_it.c ****   while (1)
 132              		.loc 1 84 9 discriminator 1
 133 0004 FEE7     		b	.L7
 134              		.cfi_endproc
 135              	.LFE66:
 137              		.global	EscCnt
 138              		.section	.bss.EscCnt,"aw",%nobits
 139              		.align	2
 142              	EscCnt:
 143 0000 00000000 		.space	4
 144              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 145              		.align	1
 146              		.global	TIM4_IRQHandler
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu softvfp
 152              	TIM4_IRQHandler:
 153              	.LFB67:
  85:Src/stm32f10x_it.c ****   {
  86:Src/stm32f10x_it.c ****   }
ARM GAS  /tmp/cchv0dEJ.s 			page 5


  87:Src/stm32f10x_it.c **** }
  88:Src/stm32f10x_it.c **** #define ESC_CH				0x1b
  89:Src/stm32f10x_it.c **** #define RESET_CNT			100
  90:Src/stm32f10x_it.c **** unsigned int EscCnt=0;
  91:Src/stm32f10x_it.c **** // void USART1_IRQHandler(void)
  92:Src/stm32f10x_it.c **** // {
  93:Src/stm32f10x_it.c **** 	 
  94:Src/stm32f10x_it.c **** 
  95:Src/stm32f10x_it.c **** // }
  96:Src/stm32f10x_it.c **** 
  97:Src/stm32f10x_it.c **** // void USART2_IRQHandler(void)
  98:Src/stm32f10x_it.c **** // {  
  99:Src/stm32f10x_it.c **** 	 
 100:Src/stm32f10x_it.c **** // }
 101:Src/stm32f10x_it.c ****  
 102:Src/stm32f10x_it.c **** void TIM4_IRQHandler(void)   //TIM4�ж�
 103:Src/stm32f10x_it.c **** { 
 154              		.loc 1 103 1
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159 0000 80B4     		push	{r7}
 160              	.LCFI10:
 161              		.cfi_def_cfa_offset 4
 162              		.cfi_offset 7, -4
 163 0002 00AF     		add	r7, sp, #0
 164              	.LCFI11:
 165              		.cfi_def_cfa_register 7
 104:Src/stm32f10x_it.c ****  
 105:Src/stm32f10x_it.c **** }
 166              		.loc 1 105 1
 167 0004 00BF     		nop
 168 0006 BD46     		mov	sp, r7
 169              	.LCFI12:
 170              		.cfi_def_cfa_register 13
 171              		@ sp needed
 172 0008 80BC     		pop	{r7}
 173              	.LCFI13:
 174              		.cfi_restore 7
 175              		.cfi_def_cfa_offset 0
 176 000a 7047     		bx	lr
 177              		.cfi_endproc
 178              	.LFE67:
 180              		.section	.text.UsageFault_Handler,"ax",%progbits
 181              		.align	1
 182              		.global	UsageFault_Handler
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu softvfp
 188              	UsageFault_Handler:
 189              	.LFB68:
 106:Src/stm32f10x_it.c **** /**
 107:Src/stm32f10x_it.c ****   * @brief  This function handles Usage Fault exception.
 108:Src/stm32f10x_it.c ****   * @param  None
 109:Src/stm32f10x_it.c ****   * @retval None
ARM GAS  /tmp/cchv0dEJ.s 			page 6


 110:Src/stm32f10x_it.c ****   */
 111:Src/stm32f10x_it.c **** void UsageFault_Handler(void)
 112:Src/stm32f10x_it.c **** {
 190              		.loc 1 112 1
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 195 0000 80B4     		push	{r7}
 196              	.LCFI14:
 197              		.cfi_def_cfa_offset 4
 198              		.cfi_offset 7, -4
 199 0002 00AF     		add	r7, sp, #0
 200              	.LCFI15:
 201              		.cfi_def_cfa_register 7
 202              	.L10:
 113:Src/stm32f10x_it.c ****   /* Go to infinite loop when Usage Fault exception occurs */
 114:Src/stm32f10x_it.c ****   while (1)
 203              		.loc 1 114 9 discriminator 1
 204 0004 FEE7     		b	.L10
 205              		.cfi_endproc
 206              	.LFE68:
 208              		.section	.text.DebugMon_Handler,"ax",%progbits
 209              		.align	1
 210              		.global	DebugMon_Handler
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu softvfp
 216              	DebugMon_Handler:
 217              	.LFB69:
 115:Src/stm32f10x_it.c ****   {
 116:Src/stm32f10x_it.c ****   }
 117:Src/stm32f10x_it.c **** }
 118:Src/stm32f10x_it.c **** 
 119:Src/stm32f10x_it.c **** /**
 120:Src/stm32f10x_it.c ****   * @brief  This function handles SVCall exception.
 121:Src/stm32f10x_it.c ****   * @param  None
 122:Src/stm32f10x_it.c ****   * @retval None
 123:Src/stm32f10x_it.c ****   */
 124:Src/stm32f10x_it.c **** //void SVC_Handler(void)
 125:Src/stm32f10x_it.c **** //{
 126:Src/stm32f10x_it.c **** //}
 127:Src/stm32f10x_it.c **** 
 128:Src/stm32f10x_it.c **** /**
 129:Src/stm32f10x_it.c ****   * @brief  This function handles Debug Monitor exception.
 130:Src/stm32f10x_it.c ****   * @param  None
 131:Src/stm32f10x_it.c ****   * @retval None
 132:Src/stm32f10x_it.c ****   */
 133:Src/stm32f10x_it.c **** void DebugMon_Handler(void)
 134:Src/stm32f10x_it.c **** {
 218              		.loc 1 134 1
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 1, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223 0000 80B4     		push	{r7}
ARM GAS  /tmp/cchv0dEJ.s 			page 7


 224              	.LCFI16:
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 7, -4
 227 0002 00AF     		add	r7, sp, #0
 228              	.LCFI17:
 229              		.cfi_def_cfa_register 7
 135:Src/stm32f10x_it.c **** }
 230              		.loc 1 135 1
 231 0004 00BF     		nop
 232 0006 BD46     		mov	sp, r7
 233              	.LCFI18:
 234              		.cfi_def_cfa_register 13
 235              		@ sp needed
 236 0008 80BC     		pop	{r7}
 237              	.LCFI19:
 238              		.cfi_restore 7
 239              		.cfi_def_cfa_offset 0
 240 000a 7047     		bx	lr
 241              		.cfi_endproc
 242              	.LFE69:
 244              		.text
 245              	.Letext0:
ARM GAS  /tmp/cchv0dEJ.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_it.c
     /tmp/cchv0dEJ.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/cchv0dEJ.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cchv0dEJ.s:54     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cchv0dEJ.s:61     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cchv0dEJ.s:82     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cchv0dEJ.s:89     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cchv0dEJ.s:110    .text.BusFault_Handler:0000000000000000 $t
     /tmp/cchv0dEJ.s:117    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cchv0dEJ.s:142    .bss.EscCnt:0000000000000000 EscCnt
     /tmp/cchv0dEJ.s:139    .bss.EscCnt:0000000000000000 $d
     /tmp/cchv0dEJ.s:145    .text.TIM4_IRQHandler:0000000000000000 $t
     /tmp/cchv0dEJ.s:152    .text.TIM4_IRQHandler:0000000000000000 TIM4_IRQHandler
     /tmp/cchv0dEJ.s:181    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cchv0dEJ.s:188    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cchv0dEJ.s:209    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cchv0dEJ.s:216    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler

NO UNDEFINED SYMBOLS
