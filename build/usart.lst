ARM GAS  /tmp/ccxTtqDE.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	__stdout
  16              		.section	.bss.__stdout,"aw",%nobits
  17              		.align	2
  20              	__stdout:
  21 0000 00000000 		.space	104
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              		.section	.text._sys_exit,"ax",%progbits
  23              		.align	1
  24              		.global	_sys_exit
  25              		.arch armv7-m
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  29              		.fpu softvfp
  31              	_sys_exit:
  32              	.LFB66:
  33              		.file 1 "hardware/src/usart.c"
   1:hardware/src/usart.c **** /**
   2:hardware/src/usart.c **** 	************************************************************
   3:hardware/src/usart.c **** 	************************************************************
   4:hardware/src/usart.c **** 	************************************************************
   5:hardware/src/usart.c **** 	*	文件名： 	usart.c
   6:hardware/src/usart.c **** 	*
   7:hardware/src/usart.c **** 	*	作者： 		张继瑞
   8:hardware/src/usart.c **** 	*
   9:hardware/src/usart.c **** 	*	日期： 		2016-11-23
  10:hardware/src/usart.c **** 	*
  11:hardware/src/usart.c **** 	*	版本： 		V1.0
  12:hardware/src/usart.c **** 	*
  13:hardware/src/usart.c **** 	*	说明： 		单片机串口外设初始化，格式化打印
  14:hardware/src/usart.c **** 	*
  15:hardware/src/usart.c **** 	*	修改记录：	
  16:hardware/src/usart.c **** 	************************************************************
  17:hardware/src/usart.c **** 	************************************************************
  18:hardware/src/usart.c **** 	************************************************************
  19:hardware/src/usart.c **** **/
  20:hardware/src/usart.c **** 
  21:hardware/src/usart.c **** //硬件驱动
  22:hardware/src/usart.c **** #include "usart.h"
  23:hardware/src/usart.c **** #include "delay.h"
ARM GAS  /tmp/ccxTtqDE.s 			page 2


  24:hardware/src/usart.c **** 
  25:hardware/src/usart.c **** //C库
  26:hardware/src/usart.c **** #include <stdarg.h>
  27:hardware/src/usart.c **** #include <string.h>
  28:hardware/src/usart.c **** #include <stdio.h>
  29:hardware/src/usart.c **** 
  30:hardware/src/usart.c **** /* 使用uart1实现printf功能 */
  31:hardware/src/usart.c **** #pragma import(__use_no_semihosting)
  32:hardware/src/usart.c **** struct __FILE
  33:hardware/src/usart.c **** {
  34:hardware/src/usart.c **** 	int handle;
  35:hardware/src/usart.c **** 
  36:hardware/src/usart.c **** };
  37:hardware/src/usart.c **** FILE __stdout;
  38:hardware/src/usart.c **** void _sys_exit(int x)
  39:hardware/src/usart.c **** {
  34              		.loc 1 39 1
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38              		@ link register save eliminated.
  39 0000 80B4     		push	{r7}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 4
  42              		.cfi_offset 7, -4
  43 0002 83B0     		sub	sp, sp, #12
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 16
  46 0004 00AF     		add	r7, sp, #0
  47              	.LCFI2:
  48              		.cfi_def_cfa_register 7
  49 0006 7860     		str	r0, [r7, #4]
  40:hardware/src/usart.c **** 	x = x;
  41:hardware/src/usart.c **** }
  50              		.loc 1 41 1
  51 0008 00BF     		nop
  52 000a 0C37     		adds	r7, r7, #12
  53              	.LCFI3:
  54              		.cfi_def_cfa_offset 4
  55 000c BD46     		mov	sp, r7
  56              	.LCFI4:
  57              		.cfi_def_cfa_register 13
  58              		@ sp needed
  59 000e 80BC     		pop	{r7}
  60              	.LCFI5:
  61              		.cfi_restore 7
  62              		.cfi_def_cfa_offset 0
  63 0010 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE66:
  67              		.section	.text._write,"ax",%progbits
  68              		.align	1
  69              		.global	_write
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu softvfp
ARM GAS  /tmp/ccxTtqDE.s 			page 3


  75              	_write:
  76              	.LFB67:
  42:hardware/src/usart.c **** // used for gcc compalier on linux 
  43:hardware/src/usart.c **** int _write (int fd, char *pBuffer, int size)  
  44:hardware/src/usart.c **** {  
  77              		.loc 1 44 1
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 24
  80              		@ frame_needed = 1, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82 0000 80B4     		push	{r7}
  83              	.LCFI6:
  84              		.cfi_def_cfa_offset 4
  85              		.cfi_offset 7, -4
  86 0002 87B0     		sub	sp, sp, #28
  87              	.LCFI7:
  88              		.cfi_def_cfa_offset 32
  89 0004 00AF     		add	r7, sp, #0
  90              	.LCFI8:
  91              		.cfi_def_cfa_register 7
  92 0006 F860     		str	r0, [r7, #12]
  93 0008 B960     		str	r1, [r7, #8]
  94 000a 7A60     		str	r2, [r7, #4]
  95              	.LBB2:
  45:hardware/src/usart.c ****     for (int i = 0; i < size; i++)  
  96              		.loc 1 45 14
  97 000c 0023     		movs	r3, #0
  98 000e 7B61     		str	r3, [r7, #20]
  99              		.loc 1 45 5
 100 0010 11E0     		b	.L3
 101              	.L5:
  46:hardware/src/usart.c ****     {  
  47:hardware/src/usart.c ****         while((USART1->SR&0X40)==0);//等待上一次串口数据发送完成  
 102              		.loc 1 47 14
 103 0012 00BF     		nop
 104              	.L4:
 105              		.loc 1 47 22 discriminator 1
 106 0014 0D4B     		ldr	r3, .L7
 107 0016 1B88     		ldrh	r3, [r3]	@ movhi
 108 0018 9BB2     		uxth	r3, r3
 109              		.loc 1 47 26 discriminator 1
 110 001a 03F04003 		and	r3, r3, #64
 111              		.loc 1 47 14 discriminator 1
 112 001e 002B     		cmp	r3, #0
 113 0020 F8D0     		beq	.L4
  48:hardware/src/usart.c ****         USART1->DR = (uint8_t) pBuffer[i];       //写DR,串口1将发送数据
 114              		.loc 1 48 39 discriminator 2
 115 0022 7B69     		ldr	r3, [r7, #20]
 116 0024 BA68     		ldr	r2, [r7, #8]
 117 0026 1344     		add	r3, r3, r2
 118 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 119              		.loc 1 48 15 discriminator 2
 120 002a 084B     		ldr	r3, .L7
 121              		.loc 1 48 22 discriminator 2
 122 002c 92B2     		uxth	r2, r2
 123              		.loc 1 48 20 discriminator 2
 124 002e 9A80     		strh	r2, [r3, #4]	@ movhi
ARM GAS  /tmp/ccxTtqDE.s 			page 4


  45:hardware/src/usart.c ****     for (int i = 0; i < size; i++)  
 125              		.loc 1 45 32 discriminator 2
 126 0030 7B69     		ldr	r3, [r7, #20]
 127 0032 0133     		adds	r3, r3, #1
 128 0034 7B61     		str	r3, [r7, #20]
 129              	.L3:
  45:hardware/src/usart.c ****     for (int i = 0; i < size; i++)  
 130              		.loc 1 45 5 discriminator 1
 131 0036 7A69     		ldr	r2, [r7, #20]
 132 0038 7B68     		ldr	r3, [r7, #4]
 133 003a 9A42     		cmp	r2, r3
 134 003c E9DB     		blt	.L5
 135              	.LBE2:
  49:hardware/src/usart.c ****     }  
  50:hardware/src/usart.c ****     return size;  
 136              		.loc 1 50 12
 137 003e 7B68     		ldr	r3, [r7, #4]
  51:hardware/src/usart.c **** }
 138              		.loc 1 51 1
 139 0040 1846     		mov	r0, r3
 140 0042 1C37     		adds	r7, r7, #28
 141              	.LCFI9:
 142              		.cfi_def_cfa_offset 4
 143 0044 BD46     		mov	sp, r7
 144              	.LCFI10:
 145              		.cfi_def_cfa_register 13
 146              		@ sp needed
 147 0046 80BC     		pop	{r7}
 148              	.LCFI11:
 149              		.cfi_restore 7
 150              		.cfi_def_cfa_offset 0
 151 0048 7047     		bx	lr
 152              	.L8:
 153 004a 00BF     		.align	2
 154              	.L7:
 155 004c 00380140 		.word	1073821696
 156              		.cfi_endproc
 157              	.LFE67:
 159              		.section	.text.fputc,"ax",%progbits
 160              		.align	1
 161              		.global	fputc
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu softvfp
 167              	fputc:
 168              	.LFB68:
  52:hardware/src/usart.c **** // used for keil comalier on windows
  53:hardware/src/usart.c **** //重定义fputc函数 
  54:hardware/src/usart.c **** int fputc(int ch, FILE *f)
  55:hardware/src/usart.c **** { 	
 169              		.loc 1 55 1
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 8
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccxTtqDE.s 			page 5


 175              	.LCFI12:
 176              		.cfi_def_cfa_offset 4
 177              		.cfi_offset 7, -4
 178 0002 83B0     		sub	sp, sp, #12
 179              	.LCFI13:
 180              		.cfi_def_cfa_offset 16
 181 0004 00AF     		add	r7, sp, #0
 182              	.LCFI14:
 183              		.cfi_def_cfa_register 7
 184 0006 7860     		str	r0, [r7, #4]
 185 0008 3960     		str	r1, [r7]
  56:hardware/src/usart.c **** 	while((USART1->SR&0X40)==0);//循环发送,直到发送完毕   
 186              		.loc 1 56 7
 187 000a 00BF     		nop
 188              	.L10:
 189              		.loc 1 56 15 discriminator 1
 190 000c 084B     		ldr	r3, .L12
 191 000e 1B88     		ldrh	r3, [r3]	@ movhi
 192 0010 9BB2     		uxth	r3, r3
 193              		.loc 1 56 19 discriminator 1
 194 0012 03F04003 		and	r3, r3, #64
 195              		.loc 1 56 7 discriminator 1
 196 0016 002B     		cmp	r3, #0
 197 0018 F8D0     		beq	.L10
  57:hardware/src/usart.c **** 	USART1->DR = (u8) ch;      
 198              		.loc 1 57 15
 199 001a 7B68     		ldr	r3, [r7, #4]
 200 001c DAB2     		uxtb	r2, r3
 201              		.loc 1 57 8
 202 001e 044B     		ldr	r3, .L12
 203              		.loc 1 57 15
 204 0020 92B2     		uxth	r2, r2
 205              		.loc 1 57 13
 206 0022 9A80     		strh	r2, [r3, #4]	@ movhi
  58:hardware/src/usart.c **** 	return ch;
 207              		.loc 1 58 9
 208 0024 7B68     		ldr	r3, [r7, #4]
  59:hardware/src/usart.c **** }
 209              		.loc 1 59 1
 210 0026 1846     		mov	r0, r3
 211 0028 0C37     		adds	r7, r7, #12
 212              	.LCFI15:
 213              		.cfi_def_cfa_offset 4
 214 002a BD46     		mov	sp, r7
 215              	.LCFI16:
 216              		.cfi_def_cfa_register 13
 217              		@ sp needed
 218 002c 80BC     		pop	{r7}
 219              	.LCFI17:
 220              		.cfi_restore 7
 221              		.cfi_def_cfa_offset 0
 222 002e 7047     		bx	lr
 223              	.L13:
 224              		.align	2
 225              	.L12:
 226 0030 00380140 		.word	1073821696
 227              		.cfi_endproc
ARM GAS  /tmp/ccxTtqDE.s 			page 6


 228              	.LFE68:
 230              		.section	.text.uart1_init,"ax",%progbits
 231              		.align	1
 232              		.global	uart1_init
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 236              		.fpu softvfp
 238              	uart1_init:
 239              	.LFB69:
  60:hardware/src/usart.c **** 
  61:hardware/src/usart.c **** /*
  62:hardware/src/usart.c **** ************************************************************
  63:hardware/src/usart.c **** *	函数名称：	Usart1_Init
  64:hardware/src/usart.c **** *
  65:hardware/src/usart.c **** *	函数功能：	串口1初始化
  66:hardware/src/usart.c **** *
  67:hardware/src/usart.c **** *	入口参数：	baud：设定的波特率
  68:hardware/src/usart.c **** *
  69:hardware/src/usart.c **** *	返回参数：	无
  70:hardware/src/usart.c **** *
  71:hardware/src/usart.c **** *	说明：		TX-PA9		RX-PA10
  72:hardware/src/usart.c **** ************************************************************
  73:hardware/src/usart.c **** */
  74:hardware/src/usart.c **** void uart1_init(unsigned int baud)
  75:hardware/src/usart.c **** {
 240              		.loc 1 75 1
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 32
 243              		@ frame_needed = 1, uses_anonymous_args = 0
 244 0000 80B5     		push	{r7, lr}
 245              	.LCFI18:
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 88B0     		sub	sp, sp, #32
 250              	.LCFI19:
 251              		.cfi_def_cfa_offset 40
 252 0004 00AF     		add	r7, sp, #0
 253              	.LCFI20:
 254              		.cfi_def_cfa_register 7
 255 0006 7860     		str	r0, [r7, #4]
  76:hardware/src/usart.c **** 
  77:hardware/src/usart.c **** 	GPIO_InitTypeDef gpio_initstruct;
  78:hardware/src/usart.c **** 	USART_InitTypeDef usart_initstruct;
  79:hardware/src/usart.c **** 	NVIC_InitTypeDef nvic_initstruct;
  80:hardware/src/usart.c **** 	
  81:hardware/src/usart.c **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
 256              		.loc 1 81 2
 257 0008 0121     		movs	r1, #1
 258 000a 0420     		movs	r0, #4
 259 000c FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  82:hardware/src/usart.c **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
 260              		.loc 1 82 2
 261 0010 0121     		movs	r1, #1
 262 0012 4FF48040 		mov	r0, #16384
 263 0016 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
ARM GAS  /tmp/ccxTtqDE.s 			page 7


  83:hardware/src/usart.c **** 	
  84:hardware/src/usart.c **** 	//PA9	TXD
  85:hardware/src/usart.c **** 	gpio_initstruct.GPIO_Mode = GPIO_Mode_AF_PP;
 264              		.loc 1 85 28
 265 001a 1823     		movs	r3, #24
 266 001c FB77     		strb	r3, [r7, #31]
  86:hardware/src/usart.c **** 	gpio_initstruct.GPIO_Pin = GPIO_Pin_9;
 267              		.loc 1 86 27
 268 001e 4FF40073 		mov	r3, #512
 269 0022 BB83     		strh	r3, [r7, #28]	@ movhi
  87:hardware/src/usart.c **** 	gpio_initstruct.GPIO_Speed = GPIO_Speed_50MHz;
 270              		.loc 1 87 29
 271 0024 0323     		movs	r3, #3
 272 0026 BB77     		strb	r3, [r7, #30]
  88:hardware/src/usart.c **** 	GPIO_Init(GPIOA, &gpio_initstruct);
 273              		.loc 1 88 2
 274 0028 07F11C03 		add	r3, r7, #28
 275 002c 1946     		mov	r1, r3
 276 002e 1E48     		ldr	r0, .L15
 277 0030 FFF7FEFF 		bl	GPIO_Init
  89:hardware/src/usart.c **** 	
  90:hardware/src/usart.c **** 	//PA10	RXD
  91:hardware/src/usart.c **** 	gpio_initstruct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 278              		.loc 1 91 28
 279 0034 0423     		movs	r3, #4
 280 0036 FB77     		strb	r3, [r7, #31]
  92:hardware/src/usart.c **** 	gpio_initstruct.GPIO_Pin = GPIO_Pin_10;
 281              		.loc 1 92 27
 282 0038 4FF48063 		mov	r3, #1024
 283 003c BB83     		strh	r3, [r7, #28]	@ movhi
  93:hardware/src/usart.c **** 	gpio_initstruct.GPIO_Speed = GPIO_Speed_50MHz;
 284              		.loc 1 93 29
 285 003e 0323     		movs	r3, #3
 286 0040 BB77     		strb	r3, [r7, #30]
  94:hardware/src/usart.c **** 	GPIO_Init(GPIOA, &gpio_initstruct);
 287              		.loc 1 94 2
 288 0042 07F11C03 		add	r3, r7, #28
 289 0046 1946     		mov	r1, r3
 290 0048 1748     		ldr	r0, .L15
 291 004a FFF7FEFF 		bl	GPIO_Init
  95:hardware/src/usart.c **** 	
  96:hardware/src/usart.c **** 	usart_initstruct.USART_BaudRate = baud;
 292              		.loc 1 96 34
 293 004e 7B68     		ldr	r3, [r7, #4]
 294 0050 FB60     		str	r3, [r7, #12]
  97:hardware/src/usart.c **** 	usart_initstruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;		//无硬件流控
 295              		.loc 1 97 45
 296 0052 0023     		movs	r3, #0
 297 0054 3B83     		strh	r3, [r7, #24]	@ movhi
  98:hardware/src/usart.c **** 	usart_initstruct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;						//接收和发送
 298              		.loc 1 98 30
 299 0056 0C23     		movs	r3, #12
 300 0058 FB82     		strh	r3, [r7, #22]	@ movhi
  99:hardware/src/usart.c **** 	usart_initstruct.USART_Parity = USART_Parity_No;									//无校验
 301              		.loc 1 99 32
 302 005a 0023     		movs	r3, #0
 303 005c BB82     		strh	r3, [r7, #20]	@ movhi
ARM GAS  /tmp/ccxTtqDE.s 			page 8


 100:hardware/src/usart.c **** 	usart_initstruct.USART_StopBits = USART_StopBits_1;								//1位停止位
 304              		.loc 1 100 34
 305 005e 0023     		movs	r3, #0
 306 0060 7B82     		strh	r3, [r7, #18]	@ movhi
 101:hardware/src/usart.c **** 	usart_initstruct.USART_WordLength = USART_WordLength_8b;							//8位数据位
 307              		.loc 1 101 36
 308 0062 0023     		movs	r3, #0
 309 0064 3B82     		strh	r3, [r7, #16]	@ movhi
 102:hardware/src/usart.c **** 	USART_Init(USART1, &usart_initstruct);
 310              		.loc 1 102 2
 311 0066 07F10C03 		add	r3, r7, #12
 312 006a 1946     		mov	r1, r3
 313 006c 0F48     		ldr	r0, .L15+4
 314 006e FFF7FEFF 		bl	USART_Init
 103:hardware/src/usart.c **** 	
 104:hardware/src/usart.c **** 	USART_Cmd(USART1, ENABLE);														//使能串口
 315              		.loc 1 104 2
 316 0072 0121     		movs	r1, #1
 317 0074 0D48     		ldr	r0, .L15+4
 318 0076 FFF7FEFF 		bl	USART_Cmd
 105:hardware/src/usart.c **** 	
 106:hardware/src/usart.c **** 	USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);									//使能接收中断
 319              		.loc 1 106 2
 320 007a 0122     		movs	r2, #1
 321 007c 40F22551 		movw	r1, #1317
 322 0080 0A48     		ldr	r0, .L15+4
 323 0082 FFF7FEFF 		bl	USART_ITConfig
 107:hardware/src/usart.c **** 	
 108:hardware/src/usart.c **** 	nvic_initstruct.NVIC_IRQChannel = USART1_IRQn;
 324              		.loc 1 108 34
 325 0086 2523     		movs	r3, #37
 326 0088 3B72     		strb	r3, [r7, #8]
 109:hardware/src/usart.c **** 	nvic_initstruct.NVIC_IRQChannelCmd = ENABLE;
 327              		.loc 1 109 37
 328 008a 0123     		movs	r3, #1
 329 008c FB72     		strb	r3, [r7, #11]
 110:hardware/src/usart.c **** 	nvic_initstruct.NVIC_IRQChannelPreemptionPriority = 0;
 330              		.loc 1 110 52
 331 008e 0023     		movs	r3, #0
 332 0090 7B72     		strb	r3, [r7, #9]
 111:hardware/src/usart.c **** 	nvic_initstruct.NVIC_IRQChannelSubPriority = 2;
 333              		.loc 1 111 45
 334 0092 0223     		movs	r3, #2
 335 0094 BB72     		strb	r3, [r7, #10]
 112:hardware/src/usart.c **** 	NVIC_Init(&nvic_initstruct);
 336              		.loc 1 112 2
 337 0096 07F10803 		add	r3, r7, #8
 338 009a 1846     		mov	r0, r3
 339 009c FFF7FEFF 		bl	NVIC_Init
 113:hardware/src/usart.c **** 
 114:hardware/src/usart.c **** }
 340              		.loc 1 114 1
 341 00a0 00BF     		nop
 342 00a2 2037     		adds	r7, r7, #32
 343              	.LCFI21:
 344              		.cfi_def_cfa_offset 8
 345 00a4 BD46     		mov	sp, r7
ARM GAS  /tmp/ccxTtqDE.s 			page 9


 346              	.LCFI22:
 347              		.cfi_def_cfa_register 13
 348              		@ sp needed
 349 00a6 80BD     		pop	{r7, pc}
 350              	.L16:
 351              		.align	2
 352              	.L15:
 353 00a8 00080140 		.word	1073809408
 354 00ac 00380140 		.word	1073821696
 355              		.cfi_endproc
 356              	.LFE69:
 358              		.section	.text.Usart2_Init,"ax",%progbits
 359              		.align	1
 360              		.global	Usart2_Init
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu softvfp
 366              	Usart2_Init:
 367              	.LFB70:
 115:hardware/src/usart.c **** 
 116:hardware/src/usart.c **** /*
 117:hardware/src/usart.c **** ************************************************************
 118:hardware/src/usart.c **** *	函数名称：	Usart2_Init
 119:hardware/src/usart.c **** *
 120:hardware/src/usart.c **** *	函数功能：	串口2初始化
 121:hardware/src/usart.c **** *
 122:hardware/src/usart.c **** *	入口参数：	baud：设定的波特率
 123:hardware/src/usart.c **** *
 124:hardware/src/usart.c **** *	返回参数：	无
 125:hardware/src/usart.c **** *
 126:hardware/src/usart.c **** *	说明：		TX-PA2		RX-PA3
 127:hardware/src/usart.c **** ************************************************************
 128:hardware/src/usart.c **** */
 129:hardware/src/usart.c **** void Usart2_Init(unsigned int baud)
 130:hardware/src/usart.c **** {
 368              		.loc 1 130 1
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 32
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372 0000 80B5     		push	{r7, lr}
 373              	.LCFI23:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 7, -8
 376              		.cfi_offset 14, -4
 377 0002 88B0     		sub	sp, sp, #32
 378              	.LCFI24:
 379              		.cfi_def_cfa_offset 40
 380 0004 00AF     		add	r7, sp, #0
 381              	.LCFI25:
 382              		.cfi_def_cfa_register 7
 383 0006 7860     		str	r0, [r7, #4]
 131:hardware/src/usart.c **** 
 132:hardware/src/usart.c **** 	GPIO_InitTypeDef gpio_initstruct;
 133:hardware/src/usart.c **** 	USART_InitTypeDef usart_initstruct;
 134:hardware/src/usart.c **** 	NVIC_InitTypeDef nvic_initstruct;
 135:hardware/src/usart.c **** 	
ARM GAS  /tmp/ccxTtqDE.s 			page 10


 136:hardware/src/usart.c **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
 384              		.loc 1 136 2
 385 0008 0121     		movs	r1, #1
 386 000a 0420     		movs	r0, #4
 387 000c FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 137:hardware/src/usart.c **** 	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE);
 388              		.loc 1 137 2
 389 0010 0121     		movs	r1, #1
 390 0012 4FF40030 		mov	r0, #131072
 391 0016 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 138:hardware/src/usart.c **** 	
 139:hardware/src/usart.c **** 	//PA2	TXD
 140:hardware/src/usart.c **** 	gpio_initstruct.GPIO_Mode = GPIO_Mode_AF_PP;
 392              		.loc 1 140 28
 393 001a 1823     		movs	r3, #24
 394 001c FB77     		strb	r3, [r7, #31]
 141:hardware/src/usart.c **** 	gpio_initstruct.GPIO_Pin = GPIO_Pin_2;
 395              		.loc 1 141 27
 396 001e 0423     		movs	r3, #4
 397 0020 BB83     		strh	r3, [r7, #28]	@ movhi
 142:hardware/src/usart.c **** 	gpio_initstruct.GPIO_Speed = GPIO_Speed_50MHz;
 398              		.loc 1 142 29
 399 0022 0323     		movs	r3, #3
 400 0024 BB77     		strb	r3, [r7, #30]
 143:hardware/src/usart.c **** 	GPIO_Init(GPIOA, &gpio_initstruct);
 401              		.loc 1 143 2
 402 0026 07F11C03 		add	r3, r7, #28
 403 002a 1946     		mov	r1, r3
 404 002c 1D48     		ldr	r0, .L18
 405 002e FFF7FEFF 		bl	GPIO_Init
 144:hardware/src/usart.c **** 	
 145:hardware/src/usart.c **** 	//PA3	RXD
 146:hardware/src/usart.c **** 	gpio_initstruct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 406              		.loc 1 146 28
 407 0032 0423     		movs	r3, #4
 408 0034 FB77     		strb	r3, [r7, #31]
 147:hardware/src/usart.c **** 	gpio_initstruct.GPIO_Pin = GPIO_Pin_3;
 409              		.loc 1 147 27
 410 0036 0823     		movs	r3, #8
 411 0038 BB83     		strh	r3, [r7, #28]	@ movhi
 148:hardware/src/usart.c **** 	gpio_initstruct.GPIO_Speed = GPIO_Speed_50MHz;
 412              		.loc 1 148 29
 413 003a 0323     		movs	r3, #3
 414 003c BB77     		strb	r3, [r7, #30]
 149:hardware/src/usart.c **** 	GPIO_Init(GPIOA, &gpio_initstruct);
 415              		.loc 1 149 2
 416 003e 07F11C03 		add	r3, r7, #28
 417 0042 1946     		mov	r1, r3
 418 0044 1748     		ldr	r0, .L18
 419 0046 FFF7FEFF 		bl	GPIO_Init
 150:hardware/src/usart.c **** 	
 151:hardware/src/usart.c **** 	usart_initstruct.USART_BaudRate = baud;
 420              		.loc 1 151 34
 421 004a 7B68     		ldr	r3, [r7, #4]
 422 004c FB60     		str	r3, [r7, #12]
 152:hardware/src/usart.c **** 	usart_initstruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;		//无硬件流控
 423              		.loc 1 152 45
ARM GAS  /tmp/ccxTtqDE.s 			page 11


 424 004e 0023     		movs	r3, #0
 425 0050 3B83     		strh	r3, [r7, #24]	@ movhi
 153:hardware/src/usart.c **** 	usart_initstruct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;						//接收和发送
 426              		.loc 1 153 30
 427 0052 0C23     		movs	r3, #12
 428 0054 FB82     		strh	r3, [r7, #22]	@ movhi
 154:hardware/src/usart.c **** 	usart_initstruct.USART_Parity = USART_Parity_No;									//无校验
 429              		.loc 1 154 32
 430 0056 0023     		movs	r3, #0
 431 0058 BB82     		strh	r3, [r7, #20]	@ movhi
 155:hardware/src/usart.c **** 	usart_initstruct.USART_StopBits = USART_StopBits_1;								//1位停止位
 432              		.loc 1 155 34
 433 005a 0023     		movs	r3, #0
 434 005c 7B82     		strh	r3, [r7, #18]	@ movhi
 156:hardware/src/usart.c **** 	usart_initstruct.USART_WordLength = USART_WordLength_8b;							//8位数据位
 435              		.loc 1 156 36
 436 005e 0023     		movs	r3, #0
 437 0060 3B82     		strh	r3, [r7, #16]	@ movhi
 157:hardware/src/usart.c **** 	USART_Init(USART2, &usart_initstruct);
 438              		.loc 1 157 2
 439 0062 07F10C03 		add	r3, r7, #12
 440 0066 1946     		mov	r1, r3
 441 0068 0F48     		ldr	r0, .L18+4
 442 006a FFF7FEFF 		bl	USART_Init
 158:hardware/src/usart.c **** 	
 159:hardware/src/usart.c **** 	USART_Cmd(USART2, ENABLE);														//使能串口
 443              		.loc 1 159 2
 444 006e 0121     		movs	r1, #1
 445 0070 0D48     		ldr	r0, .L18+4
 446 0072 FFF7FEFF 		bl	USART_Cmd
 160:hardware/src/usart.c **** 	
 161:hardware/src/usart.c **** 	USART_ITConfig(USART2, USART_IT_RXNE, ENABLE);									//使能接收中断
 447              		.loc 1 161 2
 448 0076 0122     		movs	r2, #1
 449 0078 40F22551 		movw	r1, #1317
 450 007c 0A48     		ldr	r0, .L18+4
 451 007e FFF7FEFF 		bl	USART_ITConfig
 162:hardware/src/usart.c **** 	
 163:hardware/src/usart.c **** 	nvic_initstruct.NVIC_IRQChannel = USART2_IRQn;
 452              		.loc 1 163 34
 453 0082 2623     		movs	r3, #38
 454 0084 3B72     		strb	r3, [r7, #8]
 164:hardware/src/usart.c **** 	nvic_initstruct.NVIC_IRQChannelCmd = ENABLE;
 455              		.loc 1 164 37
 456 0086 0123     		movs	r3, #1
 457 0088 FB72     		strb	r3, [r7, #11]
 165:hardware/src/usart.c **** 	nvic_initstruct.NVIC_IRQChannelPreemptionPriority = 0;
 458              		.loc 1 165 52
 459 008a 0023     		movs	r3, #0
 460 008c 7B72     		strb	r3, [r7, #9]
 166:hardware/src/usart.c **** 	nvic_initstruct.NVIC_IRQChannelSubPriority = 0;
 461              		.loc 1 166 45
 462 008e 0023     		movs	r3, #0
 463 0090 BB72     		strb	r3, [r7, #10]
 167:hardware/src/usart.c **** 	NVIC_Init(&nvic_initstruct);
 464              		.loc 1 167 2
 465 0092 07F10803 		add	r3, r7, #8
ARM GAS  /tmp/ccxTtqDE.s 			page 12


 466 0096 1846     		mov	r0, r3
 467 0098 FFF7FEFF 		bl	NVIC_Init
 168:hardware/src/usart.c **** 
 169:hardware/src/usart.c **** }
 468              		.loc 1 169 1
 469 009c 00BF     		nop
 470 009e 2037     		adds	r7, r7, #32
 471              	.LCFI26:
 472              		.cfi_def_cfa_offset 8
 473 00a0 BD46     		mov	sp, r7
 474              	.LCFI27:
 475              		.cfi_def_cfa_register 13
 476              		@ sp needed
 477 00a2 80BD     		pop	{r7, pc}
 478              	.L19:
 479              		.align	2
 480              	.L18:
 481 00a4 00080140 		.word	1073809408
 482 00a8 00440040 		.word	1073759232
 483              		.cfi_endproc
 484              	.LFE70:
 486              		.section	.text.Usart_SendString,"ax",%progbits
 487              		.align	1
 488              		.global	Usart_SendString
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu softvfp
 494              	Usart_SendString:
 495              	.LFB71:
 170:hardware/src/usart.c **** 
 171:hardware/src/usart.c **** /*
 172:hardware/src/usart.c **** ************************************************************
 173:hardware/src/usart.c **** *	函数名称：	Usart_SendString
 174:hardware/src/usart.c **** *
 175:hardware/src/usart.c **** *	函数功能：	串口数据发送
 176:hardware/src/usart.c **** *
 177:hardware/src/usart.c **** *	入口参数：	USARTx：串口组
 178:hardware/src/usart.c **** *				str：要发送的数据
 179:hardware/src/usart.c **** *				len：数据长度
 180:hardware/src/usart.c **** *
 181:hardware/src/usart.c **** *	返回参数：	无
 182:hardware/src/usart.c **** *
 183:hardware/src/usart.c **** *	说明：		
 184:hardware/src/usart.c **** ************************************************************
 185:hardware/src/usart.c **** */
 186:hardware/src/usart.c **** void Usart_SendString(USART_TypeDef *USARTx, unsigned char *str, unsigned short len)
 187:hardware/src/usart.c **** {
 496              		.loc 1 187 1
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 24
 499              		@ frame_needed = 1, uses_anonymous_args = 0
 500 0000 80B5     		push	{r7, lr}
 501              	.LCFI28:
 502              		.cfi_def_cfa_offset 8
 503              		.cfi_offset 7, -8
 504              		.cfi_offset 14, -4
ARM GAS  /tmp/ccxTtqDE.s 			page 13


 505 0002 86B0     		sub	sp, sp, #24
 506              	.LCFI29:
 507              		.cfi_def_cfa_offset 32
 508 0004 00AF     		add	r7, sp, #0
 509              	.LCFI30:
 510              		.cfi_def_cfa_register 7
 511 0006 F860     		str	r0, [r7, #12]
 512 0008 B960     		str	r1, [r7, #8]
 513 000a 1346     		mov	r3, r2
 514 000c FB80     		strh	r3, [r7, #6]	@ movhi
 188:hardware/src/usart.c **** 
 189:hardware/src/usart.c **** 	unsigned short count = 0;
 515              		.loc 1 189 17
 516 000e 0023     		movs	r3, #0
 517 0010 FB82     		strh	r3, [r7, #22]	@ movhi
 190:hardware/src/usart.c **** 	
 191:hardware/src/usart.c **** 	for(; count < len; count++)
 518              		.loc 1 191 2
 519 0012 13E0     		b	.L21
 520              	.L23:
 192:hardware/src/usart.c **** 	{
 193:hardware/src/usart.c **** 		USART_SendData(USARTx, *str++);									//发送数据
 521              		.loc 1 193 30
 522 0014 BB68     		ldr	r3, [r7, #8]
 523 0016 5A1C     		adds	r2, r3, #1
 524 0018 BA60     		str	r2, [r7, #8]
 525              		.loc 1 193 26
 526 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 527              		.loc 1 193 3
 528 001c 9BB2     		uxth	r3, r3
 529 001e 1946     		mov	r1, r3
 530 0020 F868     		ldr	r0, [r7, #12]
 531 0022 FFF7FEFF 		bl	USART_SendData
 194:hardware/src/usart.c **** 		while(USART_GetFlagStatus(USARTx, USART_FLAG_TC) == RESET);		//等待发送完成
 532              		.loc 1 194 8
 533 0026 00BF     		nop
 534              	.L22:
 535              		.loc 1 194 9 discriminator 1
 536 0028 4021     		movs	r1, #64
 537 002a F868     		ldr	r0, [r7, #12]
 538 002c FFF7FEFF 		bl	USART_GetFlagStatus
 539 0030 0346     		mov	r3, r0
 540              		.loc 1 194 8 discriminator 1
 541 0032 002B     		cmp	r3, #0
 542 0034 F8D0     		beq	.L22
 191:hardware/src/usart.c **** 	{
 543              		.loc 1 191 26
 544 0036 FB8A     		ldrh	r3, [r7, #22]
 545 0038 0133     		adds	r3, r3, #1
 546 003a FB82     		strh	r3, [r7, #22]	@ movhi
 547              	.L21:
 191:hardware/src/usart.c **** 	{
 548              		.loc 1 191 2 discriminator 1
 549 003c FA8A     		ldrh	r2, [r7, #22]
 550 003e FB88     		ldrh	r3, [r7, #6]
 551 0040 9A42     		cmp	r2, r3
 552 0042 E7D3     		bcc	.L23
ARM GAS  /tmp/ccxTtqDE.s 			page 14


 195:hardware/src/usart.c **** 	}
 196:hardware/src/usart.c **** 
 197:hardware/src/usart.c **** }
 553              		.loc 1 197 1
 554 0044 00BF     		nop
 555 0046 00BF     		nop
 556 0048 1837     		adds	r7, r7, #24
 557              	.LCFI31:
 558              		.cfi_def_cfa_offset 8
 559 004a BD46     		mov	sp, r7
 560              	.LCFI32:
 561              		.cfi_def_cfa_register 13
 562              		@ sp needed
 563 004c 80BD     		pop	{r7, pc}
 564              		.cfi_endproc
 565              	.LFE71:
 567              		.section	.text.UsartPrintf,"ax",%progbits
 568              		.align	1
 569              		.global	UsartPrintf
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 573              		.fpu softvfp
 575              	UsartPrintf:
 576              	.LFB72:
 198:hardware/src/usart.c **** 
 199:hardware/src/usart.c **** /*
 200:hardware/src/usart.c **** ************************************************************
 201:hardware/src/usart.c **** *	函数名称：	UsartPrintf
 202:hardware/src/usart.c **** *
 203:hardware/src/usart.c **** *	函数功能：	格式化打印
 204:hardware/src/usart.c **** *
 205:hardware/src/usart.c **** *	入口参数：	USARTx：串口组
 206:hardware/src/usart.c **** *				fmt：不定长参
 207:hardware/src/usart.c **** *
 208:hardware/src/usart.c **** *	返回参数：	无
 209:hardware/src/usart.c **** *
 210:hardware/src/usart.c **** *	说明：		
 211:hardware/src/usart.c **** ************************************************************
 212:hardware/src/usart.c **** */
 213:hardware/src/usart.c **** void UsartPrintf(USART_TypeDef *USARTx, char *fmt,...)
 214:hardware/src/usart.c **** {
 577              		.loc 1 214 1
 578              		.cfi_startproc
 579              		@ args = 4, pretend = 12, frame = 312
 580              		@ frame_needed = 1, uses_anonymous_args = 1
 581 0000 0EB4     		push	{r1, r2, r3}
 582              	.LCFI33:
 583              		.cfi_def_cfa_offset 12
 584              		.cfi_offset 1, -12
 585              		.cfi_offset 2, -8
 586              		.cfi_offset 3, -4
 587 0002 80B5     		push	{r7, lr}
 588              	.LCFI34:
 589              		.cfi_def_cfa_offset 20
 590              		.cfi_offset 7, -20
 591              		.cfi_offset 14, -16
ARM GAS  /tmp/ccxTtqDE.s 			page 15


 592 0004 CFB0     		sub	sp, sp, #316
 593              	.LCFI35:
 594              		.cfi_def_cfa_offset 336
 595 0006 00AF     		add	r7, sp, #0
 596              	.LCFI36:
 597              		.cfi_def_cfa_register 7
 598 0008 07F59C73 		add	r3, r7, #312
 599 000c A3F59A73 		sub	r3, r3, #308
 600 0010 1860     		str	r0, [r3]
 215:hardware/src/usart.c **** 
 216:hardware/src/usart.c **** 	unsigned char UsartPrintfBuf[296];
 217:hardware/src/usart.c **** 	va_list ap;
 218:hardware/src/usart.c **** 	unsigned char *pStr = UsartPrintfBuf;
 601              		.loc 1 218 17
 602 0012 07F10C03 		add	r3, r7, #12
 603 0016 C7F83431 		str	r3, [r7, #308]
 219:hardware/src/usart.c **** 	
 220:hardware/src/usart.c **** 	va_start(ap, fmt);
 604              		.loc 1 220 2
 605 001a 07F5A472 		add	r2, r7, #328
 606 001e 07F59C73 		add	r3, r7, #312
 607 0022 A3F59873 		sub	r3, r3, #304
 608 0026 1A60     		str	r2, [r3]
 221:hardware/src/usart.c **** 	vsnprintf((char *)UsartPrintfBuf, sizeof(UsartPrintfBuf), fmt, ap);							//格式化
 609              		.loc 1 221 2
 610 0028 07F59C73 		add	r3, r7, #312
 611 002c A3F59873 		sub	r3, r3, #304
 612 0030 07F10C00 		add	r0, r7, #12
 613 0034 1B68     		ldr	r3, [r3]
 614 0036 D7F84421 		ldr	r2, [r7, #324]
 615 003a 4FF49471 		mov	r1, #296
 616 003e FFF7FEFF 		bl	vsnprintf
 222:hardware/src/usart.c **** 	va_end(ap);
 223:hardware/src/usart.c **** 	
 224:hardware/src/usart.c **** 	while(*pStr != 0)
 617              		.loc 1 224 7
 618 0042 1AE0     		b	.L25
 619              	.L27:
 225:hardware/src/usart.c **** 	{
 226:hardware/src/usart.c **** 		USART_SendData(USARTx, *pStr++);
 620              		.loc 1 226 31
 621 0044 D7F83431 		ldr	r3, [r7, #308]
 622 0048 5A1C     		adds	r2, r3, #1
 623 004a C7F83421 		str	r2, [r7, #308]
 624              		.loc 1 226 26
 625 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 626              		.loc 1 226 3
 627 0050 9AB2     		uxth	r2, r3
 628 0052 07F59C73 		add	r3, r7, #312
 629 0056 A3F59A73 		sub	r3, r3, #308
 630 005a 1146     		mov	r1, r2
 631 005c 1868     		ldr	r0, [r3]
 632 005e FFF7FEFF 		bl	USART_SendData
 227:hardware/src/usart.c **** 		while(USART_GetFlagStatus(USARTx, USART_FLAG_TC) == RESET);
 633              		.loc 1 227 8
 634 0062 00BF     		nop
 635              	.L26:
ARM GAS  /tmp/ccxTtqDE.s 			page 16


 636              		.loc 1 227 9 discriminator 1
 637 0064 07F59C73 		add	r3, r7, #312
 638 0068 A3F59A73 		sub	r3, r3, #308
 639 006c 4021     		movs	r1, #64
 640 006e 1868     		ldr	r0, [r3]
 641 0070 FFF7FEFF 		bl	USART_GetFlagStatus
 642 0074 0346     		mov	r3, r0
 643              		.loc 1 227 8 discriminator 1
 644 0076 002B     		cmp	r3, #0
 645 0078 F4D0     		beq	.L26
 646              	.L25:
 224:hardware/src/usart.c **** 	{
 647              		.loc 1 224 8
 648 007a D7F83431 		ldr	r3, [r7, #308]
 649 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 224:hardware/src/usart.c **** 	{
 650              		.loc 1 224 7
 651 0080 002B     		cmp	r3, #0
 652 0082 DFD1     		bne	.L27
 228:hardware/src/usart.c **** 	}
 229:hardware/src/usart.c **** 
 230:hardware/src/usart.c **** }
 653              		.loc 1 230 1
 654 0084 00BF     		nop
 655 0086 00BF     		nop
 656 0088 07F59E77 		add	r7, r7, #316
 657              	.LCFI37:
 658              		.cfi_def_cfa_offset 20
 659 008c BD46     		mov	sp, r7
 660              	.LCFI38:
 661              		.cfi_def_cfa_register 13
 662              		@ sp needed
 663 008e BDE88040 		pop	{r7, lr}
 664              	.LCFI39:
 665              		.cfi_restore 14
 666              		.cfi_restore 7
 667              		.cfi_def_cfa_offset 12
 668 0092 03B0     		add	sp, sp, #12
 669              	.LCFI40:
 670              		.cfi_restore 3
 671              		.cfi_restore 2
 672              		.cfi_restore 1
 673              		.cfi_def_cfa_offset 0
 674 0094 7047     		bx	lr
 675              		.cfi_endproc
 676              	.LFE72:
 678              		.section	.text.USART1_IRQHandler,"ax",%progbits
 679              		.align	1
 680              		.global	USART1_IRQHandler
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 684              		.fpu softvfp
 686              	USART1_IRQHandler:
 687              	.LFB73:
 231:hardware/src/usart.c **** 
 232:hardware/src/usart.c **** /*
ARM GAS  /tmp/ccxTtqDE.s 			page 17


 233:hardware/src/usart.c **** ************************************************************
 234:hardware/src/usart.c **** *	函数名称：	USART1_IRQHandler
 235:hardware/src/usart.c **** *
 236:hardware/src/usart.c **** *	函数功能：	串口1收发中断
 237:hardware/src/usart.c **** *
 238:hardware/src/usart.c **** *	入口参数：	无
 239:hardware/src/usart.c **** *
 240:hardware/src/usart.c **** *	返回参数：	无
 241:hardware/src/usart.c **** *
 242:hardware/src/usart.c **** *	说明：		
 243:hardware/src/usart.c **** ************************************************************
 244:hardware/src/usart.c **** */
 245:hardware/src/usart.c **** void USART1_IRQHandler(void)
 246:hardware/src/usart.c **** {
 688              		.loc 1 246 1
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 1, uses_anonymous_args = 0
 692 0000 80B5     		push	{r7, lr}
 693              	.LCFI41:
 694              		.cfi_def_cfa_offset 8
 695              		.cfi_offset 7, -8
 696              		.cfi_offset 14, -4
 697 0002 00AF     		add	r7, sp, #0
 698              	.LCFI42:
 699              		.cfi_def_cfa_register 7
 247:hardware/src/usart.c **** 
 248:hardware/src/usart.c **** 	if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET) //接收中断
 700              		.loc 1 248 5
 701 0004 40F22551 		movw	r1, #1317
 702 0008 0548     		ldr	r0, .L31
 703 000a FFF7FEFF 		bl	USART_GetITStatus
 704 000e 0346     		mov	r3, r0
 705              		.loc 1 248 4
 706 0010 002B     		cmp	r3, #0
 707 0012 03D0     		beq	.L30
 249:hardware/src/usart.c **** 	{
 250:hardware/src/usart.c **** 		USART_ClearFlag(USART1, USART_FLAG_RXNE);
 708              		.loc 1 250 3
 709 0014 2021     		movs	r1, #32
 710 0016 0248     		ldr	r0, .L31
 711 0018 FFF7FEFF 		bl	USART_ClearFlag
 712              	.L30:
 251:hardware/src/usart.c **** 	}
 252:hardware/src/usart.c **** 
 253:hardware/src/usart.c **** }
 713              		.loc 1 253 1
 714 001c 00BF     		nop
 715 001e 80BD     		pop	{r7, pc}
 716              	.L32:
 717              		.align	2
 718              	.L31:
 719 0020 00380140 		.word	1073821696
 720              		.cfi_endproc
 721              	.LFE73:
 723              		.text
 724              	.Letext0:
ARM GAS  /tmp/ccxTtqDE.s 			page 18


 725              		.file 2 "/home/pico/tools/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_defaul
 726              		.file 3 "/home/pico/tools/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 727              		.file 4 "Inc/stm32f10x.h"
 728              		.file 5 "Drivers/Inc/stm32f10x_gpio.h"
 729              		.file 6 "Drivers/Inc/stm32f10x_usart.h"
 730              		.file 7 "Drivers/Inc/misc.h"
 731              		.file 8 "/home/pico/tools/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/include/
 732              		.file 9 "/home/pico/tools/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/include/
 733              		.file 10 "/home/pico/tools/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_types.h"
 734              		.file 11 "/home/pico/tools/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/reent.h"
 735              		.file 12 "/home/pico/tools/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/lock.h"
 736              		.file 13 "/home/pico/tools/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdio.h"
 737              		.file 14 "<built-in>"
ARM GAS  /tmp/ccxTtqDE.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccxTtqDE.s:20     .bss.__stdout:0000000000000000 __stdout
     /tmp/ccxTtqDE.s:17     .bss.__stdout:0000000000000000 $d
     /tmp/ccxTtqDE.s:23     .text._sys_exit:0000000000000000 $t
     /tmp/ccxTtqDE.s:31     .text._sys_exit:0000000000000000 _sys_exit
     /tmp/ccxTtqDE.s:68     .text._write:0000000000000000 $t
     /tmp/ccxTtqDE.s:75     .text._write:0000000000000000 _write
     /tmp/ccxTtqDE.s:155    .text._write:000000000000004c $d
     /tmp/ccxTtqDE.s:160    .text.fputc:0000000000000000 $t
     /tmp/ccxTtqDE.s:167    .text.fputc:0000000000000000 fputc
     /tmp/ccxTtqDE.s:226    .text.fputc:0000000000000030 $d
     /tmp/ccxTtqDE.s:231    .text.uart1_init:0000000000000000 $t
     /tmp/ccxTtqDE.s:238    .text.uart1_init:0000000000000000 uart1_init
     /tmp/ccxTtqDE.s:353    .text.uart1_init:00000000000000a8 $d
     /tmp/ccxTtqDE.s:359    .text.Usart2_Init:0000000000000000 $t
     /tmp/ccxTtqDE.s:366    .text.Usart2_Init:0000000000000000 Usart2_Init
     /tmp/ccxTtqDE.s:481    .text.Usart2_Init:00000000000000a4 $d
     /tmp/ccxTtqDE.s:487    .text.Usart_SendString:0000000000000000 $t
     /tmp/ccxTtqDE.s:494    .text.Usart_SendString:0000000000000000 Usart_SendString
     /tmp/ccxTtqDE.s:568    .text.UsartPrintf:0000000000000000 $t
     /tmp/ccxTtqDE.s:575    .text.UsartPrintf:0000000000000000 UsartPrintf
     /tmp/ccxTtqDE.s:679    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccxTtqDE.s:686    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccxTtqDE.s:719    .text.USART1_IRQHandler:0000000000000020 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphClockCmd
GPIO_Init
USART_Init
USART_Cmd
USART_ITConfig
NVIC_Init
RCC_APB1PeriphClockCmd
USART_SendData
USART_GetFlagStatus
vsnprintf
USART_GetITStatus
USART_ClearFlag
